<Window
    x:Class="Revit.AddinSwitcher.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:abstractViewModels="clr-namespace:Revit.AddinSwitcher.Abstractions.ViewModels"
    xmlns:baseViewModels="clr-namespace:Revit.AddinSwitcher.ViewModels.Base"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interaction="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:local="clr-namespace:Revit.AddinSwitcher"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:viewModels="clr-namespace:Revit.AddinSwitcher.ViewModels"
    Title="{Binding Localizer[mainwindow_title]}"
    Width="900"
    Height="700"
    DataContext="{Binding MainWindow, Source={StaticResource Locator}}"
    ToolTip="{Binding Localizer[mainwindow_tooltip]}"
    mc:Ignorable="d">

    <Window.Resources>

        <DataTemplate DataType="{x:Type abstractViewModels:AddinInfoViewModel}">

            <StackPanel Orientation="Vertical">

                <StackPanel
                    Grid.Row="1"
                    VerticalAlignment="Center"
                    Orientation="Horizontal">

                    <materialDesign:PackIcon
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Kind="LocationPath" />

                    <StackPanel Margin="20,0,0,0">

                        <TextBlock
                            d:Text="Имя"
                            FontSize="15"
                            FontWeight="Bold"
                            Text="{Binding Name}">

                            <TextBlock.ToolTip>

                                <StackPanel Orientation="Vertical">
                                    <TextBlock Text="{Binding Path, StringFormat={}Path: {0}}" />
                                    <TextBlock Text="{Binding Name, StringFormat={}Name: {0}}" />
                                    <TextBlock Text="{Binding DirectoryPath, StringFormat={}DirectoryPath: {0}}" />
                                    <TextBlock Text="{Binding IsActive, StringFormat={}IsActive: {0}}" />
                                </StackPanel>

                            </TextBlock.ToolTip>

                        </TextBlock>

                        <TextBlock d:Text="Описание" Text="{Binding Path}" />

                    </StackPanel>

                </StackPanel>

            </StackPanel>

        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:AddinInfoVersionFilterViewModel}">

            <TextBlock Text="{Binding Value}" />

        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:ActivatedAddinPathContainerViewModel}">

            <Grid>

                <interaction:Interaction.Triggers>
                    <interaction:EventTrigger EventName="Loaded">
                        <interaction:InvokeCommandAction Command="{Binding InitializeCommand}" />
                    </interaction:EventTrigger>
                </interaction:Interaction.Triggers>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Margin="5">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="1"
                        materialDesign:HintAssist.Hint="Поиск"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding SearchField}" />

                    <Button
                        Grid.Column="2"
                        Content="{materialDesign:PackIcon Kind=Filter,
                                                          Size=20}"
                        Style="{StaticResource MaterialDesignIconButton}" />

                    <Button
                        Grid.Column="3"
                        Content="{materialDesign:PackIcon Kind=Sort,
                                                          Size=20}"
                        Style="{StaticResource MaterialDesignIconButton}" />

                </Grid>

                <ListBox
                    Grid.Row="1"
                    DataContext="{Binding Filters}"
                    ItemsSource="{Binding}"
                    Style="{StaticResource MaterialDesignFilterChipSecondaryListBox}">

                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MaterialDesignFilterChipSecondaryListBoxItem}" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsActive, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>

                <ListBox
                    Grid.Row="2"
                    ItemsSource="{Binding CollectionViewSource.View}"
                    SelectionMode="Multiple">

                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="Content" Value="{Binding Item, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>

            </Grid>

        </DataTemplate>

        <DataTemplate DataType="{x:Type viewModels:DeactivatedAddinPathContainerViewModel}">

            <Grid>

                <interaction:Interaction.Triggers>
                    <interaction:EventTrigger EventName="Loaded">
                        <interaction:InvokeCommandAction Command="{Binding InitializeCommand}" />
                    </interaction:EventTrigger>
                </interaction:Interaction.Triggers>

                <Grid.RowDefinitions>
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="auto" />
                    <RowDefinition Height="*" />
                </Grid.RowDefinitions>

                <Grid Margin="5">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="auto" />
                        <ColumnDefinition Width="auto" />
                    </Grid.ColumnDefinitions>

                    <TextBox
                        Grid.Column="1"
                        materialDesign:HintAssist.Hint="Поиск"
                        Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                        Text="{Binding SearchField}" />

                    <Button
                        Grid.Column="2"
                        Content="{materialDesign:PackIcon Kind=Filter,
                                                          Size=20}"
                        Style="{StaticResource MaterialDesignIconButton}" />

                    <Button
                        Grid.Column="3"
                        Content="{materialDesign:PackIcon Kind=Sort,
                                                          Size=20}"
                        Style="{StaticResource MaterialDesignIconButton}" />

                </Grid>

                <ListBox
                    Grid.Row="1"
                    DataContext="{Binding Filters}"
                    ItemsSource="{Binding}"
                    Style="{StaticResource MaterialDesignFilterChipSecondaryListBox}">

                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MaterialDesignFilterChipSecondaryListBoxItem}" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsActive, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>

                <ListBox
                    Grid.Row="2"
                    ItemsSource="{Binding CollectionViewSource.View}"
                    SelectionMode="Multiple">

                    <ListBox.ItemContainerStyle>
                        <Style BasedOn="{StaticResource MaterialDesignListBoxItem}" TargetType="{x:Type ListBoxItem}">
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                            <Setter Property="Content" Value="{Binding Item, Mode=TwoWay}" />
                        </Style>
                    </ListBox.ItemContainerStyle>

                </ListBox>

            </Grid>

        </DataTemplate>

    </Window.Resources>

    <materialDesign:ColorZone HorizontalAlignment="Stretch" VerticalAlignment="Stretch">

        <Grid Margin="5">

            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" />
                <ColumnDefinition Width="60" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <ContentControl
                Grid.Row="1"
                d:Content="{d:DesignInstance Type={x:Type viewModels:ActivatedAddinPathContainerViewModel},
                                             IsDesignTimeCreatable=True}"
                Content="{Binding}"
                DataContext="{Binding ActivatedAddinPathContainer, Source={StaticResource Locator}}" />

            <StackPanel
                Grid.Row="1"
                Grid.Column="1"
                HorizontalAlignment="Center"
                VerticalAlignment="Center"
                DataContext="{Binding ActivateAddins, Source={StaticResource Locator}}"
                Orientation="Vertical">

                <StackPanel.Resources>
                    <Style BasedOn="{StaticResource MaterialDesignIconButton}" TargetType="Button">
                        <Setter Property="Margin" Value="5" />
                    </Style>
                </StackPanel.Resources>

                <Button
                    Command="{Binding DeactivateAddinsCommand}"
                    Content="{materialDesign:PackIcon Kind=ArrowForward}"
                    ToolTip="{Binding Localizer[deactivateAddins-button-tooltip]}" />
                <Button
                    Command="{Binding ActivateAddinsCommand}"
                    Content="{materialDesign:PackIcon Kind=ArrowBack}"
                    ToolTip="{Binding Localizer[activateAddins-button-tooltip]}" />

            </StackPanel>

            <ContentControl
                Grid.Row="1"
                Grid.Column="2"
                d:Content="{d:DesignInstance Type={x:Type viewModels:DeactivatedAddinPathContainerViewModel},
                                             IsDesignTimeCreatable=True}"
                Content="{Binding}"
                DataContext="{Binding DeactivatedAddinPathContainer, Source={StaticResource Locator}}" />

            <Button
                Grid.Column="2"
                Margin="5"
                HorizontalAlignment="Right"
                VerticalAlignment="Top"
                Command="{Binding RefreshCommand}"
                Content="{materialDesign:PackIcon Kind=Refresh,
                                                  Size=20}"
                DataContext="{Binding RefreshAddinPathContainer, Source={StaticResource Locator}}"
                Style="{StaticResource MaterialDesignIconButton}"
                ToolTip="{Binding Localizer[refreshInformationAboutAddins-button-tooltip]}">

                <interaction:Interaction.Triggers>
                    <interaction:EventTrigger EventName="Loaded">
                        <interaction:InvokeCommandAction Command="{Binding InitializeCommand}" />
                    </interaction:EventTrigger>
                </interaction:Interaction.Triggers>

            </Button>

        </Grid>

    </materialDesign:ColorZone>

</Window>
